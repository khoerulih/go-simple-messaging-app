name: Deploy Simple Messaging App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: create .env file
        run: | 
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "APP_HOST=${{ secrets.APP_HOST }}" >> .env
          echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env
          echo "APP_PORT_SOCKET=${{ secrets.APP_PORT_SOCKET }}" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        run: docker build . -t khoerulih/simple-messaging-app:latest
      - name: Push docker image to docker hub
        run: docker push khoerulih/simple-messaging-app:latest
  
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull docker image
        run: docker pull khoerulih/simple-messaging-app:latest
      - name: Delete old docker container
        run: docker rm -f simple-messaging-app
      - name: Running new docker container
        run: docker run -d -p 8080:8080 -p 4000:4000 --name simple-messaging-app khoerulih/simple-messaging-app:latest